/// <reference types="node" />
import { Subscribers } from './subscribers/subscribers';
import { EventEmitter } from 'events';
import { Changes } from './changes/changes';
import { INovuConfiguration } from './novu.interface';
import { Events } from './events/events';
import { NotificationGroups } from './notification-groups/notification-groups';
import { NotificationTemplates } from './notification-template/notification-template';
import { Environments } from './environments/environments';
import { Feeds } from './feeds/feeds';
import { Topics } from './topics/topics';
export declare class Novu extends EventEmitter {
    private readonly apiKey?;
    private readonly http;
    readonly subscribers: Subscribers;
    readonly environments: Environments;
    readonly events: Events;
    readonly changes: Changes;
    readonly notificationGroups: NotificationGroups;
    readonly notificationTemplates: NotificationTemplates;
    readonly feeds: Feeds;
    readonly topics: Topics;
    constructor(apiKey: string, config?: INovuConfiguration);
    trigger: typeof Events.prototype.trigger;
    broadcast: typeof Events.prototype.broadcast;
    private buildBackendUrl;
}
//# sourceMappingURL=novu.d.ts.map